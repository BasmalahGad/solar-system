# name: solar system workflow

# on:
#     workflow_dispatch:
#     push:
#         branches:
#             - feature-branch-A
#             - main

# env:
#     MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
#     MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
#     MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

# jobs:
#     docker: 
#         name: containerization
#         # needs: [code-coverage, unit-testing]
#         permissions:
#             packages: write
#         runs-on: ubuntu-latest
#         steps:
#             - name: checkout repo
#               uses: actions/checkout@v5

#             - name: docker login
#               uses: docker/login-action@v3.5.0
#               with:
#                 username: ${{ vars.DOCKERHUB_USERNAME }}
#                 password: ${{ secrets.DOCKERHUB_TOKEN }}     
                
#             - name: GHCR login
#               uses: docker/login-action@v3.5.0
#               with:
#                 registry: ghcr.io
#                 username: ${{ github.repository_owner }}
#                 password: ${{ secrets.GITHUB_TOKEN }}

#             - name: build docker file 
#               uses: docker/build-push-action@v6
#               with:
#                 push: false
#                 tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

#             - name: test docker image
#               run: |
#                docker images
#                docker run --name solar-system-app -d \
#                -p 3000:3000 \
#                -e MONGO_URI=$MONGO_URI \
#                -e MONGO_USERNAME=$MONGO_USERNAME \
#                -e MONGO_PASSWORD=$MONGO_PASSWORD \
#                ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
#                export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
#                echo $IP

#                echo testing image url using wget
#                wget -q -o - 127.0.0.1:3000/live | grep live